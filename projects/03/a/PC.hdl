// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    DMux16(in=outReg, sel=inc, a=notInc, b=beforeInc);
    Inc16(in=beforeInc,out=afterInc);
    Mux16(a=notInc, b=afterInc, sel=inc, out=tmp1);
    Mux16(a=tmp1, b=in, sel=load, out=tmp2);    
    OneBitExpander(in=reset, out=reset16);
    Not16(in=reset16, out=notreset16);
    And16(a=notreset16,b=tmp2, out=toRegister);
    Or3Way(a=load,b=inc,c=reset, out=orOut);
    Register(in=toRegister, load=orOut, out=outReg);
    Mux16(a=outReg, b=false, sel=false, out=out);    
}
